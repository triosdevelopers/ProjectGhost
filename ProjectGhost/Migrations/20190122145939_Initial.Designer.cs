// <auto-generated />
using System;
using Ghost_Db.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ProjectGhost.Migrations
{
    [DbContext(typeof(GhostContext))]
    [Migration("20190122145939_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ghost_Db.Models.CameraSchedule", b =>
                {
                    b.Property<int>("CameraScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CameraState");

                    b.Property<int>("CaptureType");

                    b.Property<int>("DayOfWeek");

                    b.Property<int>("OffTime");

                    b.Property<int>("OnTime");

                    b.Property<int>("RecordingDelay");

                    b.Property<int>("RecordingDuration");

                    b.Property<int>("SnapshotCount");

                    b.Property<int>("SnapshotDelay");

                    b.HasKey("CameraScheduleID");

                    b.ToTable("CameraSchedule");
                });

            modelBuilder.Entity("Ghost_Db.Models.Capture", b =>
                {
                    b.Property<int>("CaptureID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GhostID");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("TimeStamp");

                    b.Property<bool>("Type");

                    b.HasKey("CaptureID");

                    b.HasIndex("GhostID");

                    b.ToTable("Capture");
                });

            modelBuilder.Entity("Ghost_Db.Models.Ghost", b =>
                {
                    b.Property<int>("GhostID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CameraScheduleID");

                    b.Property<int>("GhostTypeID");

                    b.Property<int>("SerialNumber");

                    b.HasKey("GhostID");

                    b.HasIndex("CameraScheduleID");

                    b.HasIndex("GhostTypeID");

                    b.ToTable("Ghost");
                });

            modelBuilder.Entity("Ghost_Db.Models.GhostProtocols", b =>
                {
                    b.Property<int>("GhostProtocolsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CameraBrightness");

                    b.Property<int>("CameraContrast");

                    b.Property<bool>("CameraState");

                    b.Property<int>("GhostID");

                    b.Property<int>("LedBrightness");

                    b.Property<bool>("LedState");

                    b.Property<bool>("MotionSensorState");

                    b.Property<bool>("SpeakerState");

                    b.Property<int>("Volume");

                    b.HasKey("GhostProtocolsID");

                    b.HasIndex("GhostID");

                    b.ToTable("GhostProtocol");
                });

            modelBuilder.Entity("Ghost_Db.Models.GhostType", b =>
                {
                    b.Property<int>("GhostTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("Features")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("GhostTypeID");

                    b.ToTable("GhostType");
                });

            modelBuilder.Entity("Ghost_Db.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GhostID");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(2048);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("UserID");

                    b.HasIndex("GhostID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Ghost_Db.Models.Capture", b =>
                {
                    b.HasOne("Ghost_Db.Models.Ghost", "Ghost")
                        .WithMany()
                        .HasForeignKey("GhostID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ghost_Db.Models.Ghost", b =>
                {
                    b.HasOne("Ghost_Db.Models.CameraSchedule", "CameraSchedule")
                        .WithMany()
                        .HasForeignKey("CameraScheduleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ghost_Db.Models.GhostType", "GhostType")
                        .WithMany()
                        .HasForeignKey("GhostTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ghost_Db.Models.GhostProtocols", b =>
                {
                    b.HasOne("Ghost_Db.Models.Ghost", "Ghost")
                        .WithMany()
                        .HasForeignKey("GhostID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ghost_Db.Models.User", b =>
                {
                    b.HasOne("Ghost_Db.Models.Ghost", "Ghost")
                        .WithMany()
                        .HasForeignKey("GhostID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
